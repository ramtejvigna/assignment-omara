apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: strategy-analyst-backend
  annotations:
    run.googleapis.com/ingress: all
spec:
  template:
    metadata:
      annotations:
        run.googleapis.com/execution-environment: gen2
        autoscaling.knative.dev/maxScale: "10"
        autoscaling.knative.dev/minScale: "0"
        run.googleapis.com/startup-cpu-boost: "true"
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      containers:
      - image: docker.io/ramtejvigna/strategy-analyst-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: DATABASE_URL
              key: latest
        - name: GCS_BUCKET
          valueFrom:
            secretKeyRef:
              name: GCS_BUCKET
              key: latest
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              name: GEMINI_API_KEY
              key: latest
        - name: FIREBASE_PROJECT_ID
          valueFrom:
            secretKeyRef:
              name: FIREBASE_PROJECT_ID
              key: latest
        - name: FIREBASE_CREDENTIALS_PATH
          valueFrom:
            secretKeyRef:
              name: firebase-credentials
              key: latest
        - name: GCS_APPLICATION_CREDENTIALS
          valueFrom:
            secretKeyRef:
              name: gcs-credentials
              key: latest
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        startupProbe:
          httpGet:
            path: /startup
            port: 8080
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
